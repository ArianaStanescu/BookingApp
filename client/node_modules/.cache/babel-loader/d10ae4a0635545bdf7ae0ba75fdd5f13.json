{"ast":null,"code":"var _jsxFileName = \"D:\\\\Facultate\\\\BookingApp\\\\client\\\\src\\\\components\\\\reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./reserve.css\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { useContext, useState } from \"react\";\nimport { SearchContext } from \"../../context/SearchContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`/hotels/room/${hotelId}`);\n  const {\n    dates\n  } = useContext(SearchContext);\n  const navigate = useNavigate();\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    const dates = [];\n\n    while (date <= end) {\n      dates.push(new Date(date).getTime());\n      date.setDate(date.getDate() + 1);\n    }\n\n    return dates;\n  };\n\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item => item !== value));\n  };\n\n  const handleClick = async () => {\n    try {\n      await Promise.all(selectedRooms.map(roomId => {\n        const res = axios.put(`/rooms/availability/${roomId}`, {\n          dates: alldates\n        });\n        return res.data;\n      }));\n      setOpen(false);\n      navigate(\"/\");\n    } catch (err) {}\n  };\n\n  const isAvailable = roomNumber => {\n    const isFound = roomNumber.unavailableDates.some(date => alldates.includes(new Date(date).getTime()));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reserve\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rContainer\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCircleXmark,\n          className: \"rClose\",\n          onClick: () => setOpen(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Select your rooms:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rItemInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rTitle\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rDesc\",\n              children: item.desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rMax\",\n              children: [\"Max people: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: item.maxPeople\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rPrice\",\n              children: [\"$\", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rSelectRooms\",\n            children: item.roomNumbers.map(roomNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"room\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: roomNumber.number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                value: roomNumber._id,\n                onChange: handleSelect,\n                disabled: !isAvailable(roomNumber)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          className: \"rButton\",\n          children: \"Reserve Now!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  };\n};\n\n_s(Reserve, \"YHbp0vqdftgD3J6qXrXK3CxgpZ0=\", false, function () {\n  return [useFetch, useNavigate];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["D:/Facultate/BookingApp/client/src/components/reserve/Reserve.jsx"],"names":["FontAwesomeIcon","faCircleXmark","useFetch","useContext","useState","SearchContext","axios","useNavigate","Reserve","setOpen","hotelId","selectedRooms","setSelectedRooms","data","loading","error","dates","navigate","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","push","setDate","getDate","alldates","handleSelect","e","checked","target","value","filter","item","handleClick","Promise","all","map","roomId","res","put","err","isAvailable","roomNumber","isFound","unavailableDates","some","includes","title","desc","maxPeople","price","roomNumbers","number","_id"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./reserve.css\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { useContext, useState } from \"react\";\r\nimport { SearchContext } from \"../../context/SearchContext\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Reserve=({setOpen, hotelId}) => {\r\n\r\n    const [selectedRooms, setSelectedRooms] = useState([]);\r\n    const {data, loading, error} = useFetch(`/hotels/room/${hotelId}`);\r\n    const {dates} = useContext(SearchContext);\r\n    const navigate = useNavigate();\r\n    const getDatesInRange = (startDate, endDate) => {\r\n        const start = new Date(startDate);\r\n        const end = new Date(endDate);\r\n\r\n        const date = new Date(start.getTime());\r\n\r\n        const dates = [];\r\n\r\n        while (date <= end) {\r\n            dates.push(new Date(date).getTime());\r\n            date.setDate(date.getDate() + 1);\r\n        }\r\n\r\n        return dates;\r\n    };\r\n\r\n    const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\r\n\r\n\r\n    const handleSelect = (e) => {\r\n        const checked = e.target.checked;\r\n        const value = e.target.value;\r\n        setSelectedRooms(\r\n            checked ? [...selectedRooms, value]\r\n                : selectedRooms.filter((item) => item !== value)\r\n        );\r\n    };\r\n\r\n    const handleClick = async () => {\r\n        try {\r\n            await Promise.all(\r\n                selectedRooms.map((roomId) => {\r\n                    const res = axios.put(`/rooms/availability/${roomId}`, {\r\n                        dates: alldates,\r\n                    });\r\n                    return res.data;\r\n                })\r\n            );\r\n            setOpen(false);\r\n            navigate(\"/\");\r\n        } catch (err) {\r\n        }\r\n    };\r\n\r\n\r\n    const isAvailable = (roomNumber) => {\r\n        const isFound = roomNumber.unavailableDates.some((date) =>\r\n            alldates.includes(new Date(date).getTime())\r\n        );\r\n\r\n        return (\r\n\r\n\r\n            <div className=\"reserve\">\r\n                <div className=\"rContainer\">\r\n                    <FontAwesomeIcon\r\n                        icon={faCircleXmark}\r\n                        className=\"rClose\"\r\n                        onClick={() => setOpen(false)}\r\n                    />\r\n                    <span>Select your rooms:</span>\r\n                    {data.map((item) => (\r\n                        <div className=\"rItem\" key={item._id}>\r\n                            <div className=\"rItemInfo\">\r\n                                <div className=\"rTitle\">{item.title}</div>\r\n                                <div className=\"rDesc\">{item.desc}</div>\r\n                                <div className=\"rMax\">\r\n                                    Max people: <b>{item.maxPeople}</b>\r\n                                </div>\r\n                                <div className=\"rPrice\">${item.price}</div>\r\n                            </div>\r\n                            <div className=\"rSelectRooms\">\r\n                                {item.roomNumbers.map((roomNumber) => (\r\n                                    <div className=\"room\">\r\n                                        <label>{roomNumber.number}</label>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            value={roomNumber._id}\r\n                                            onChange={handleSelect}\r\n                                            disabled={!isAvailable(roomNumber)}\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    <button onClick={handleClick} className=\"rButton\">\r\n                        Reserve Now!\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Reserve;"]},"metadata":{},"sourceType":"module"}