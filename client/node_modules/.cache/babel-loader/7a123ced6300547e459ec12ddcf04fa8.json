{"ast":null,"code":"var _jsxFileName = \"D:\\\\Facultate\\\\BookingApp\\\\client\\\\src\\\\components\\\\reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./reserve.css\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { useContext, useState } from \"react\";\nimport { SearchContext } from \"../../context/SearchContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`/hotels/room/${hotelId}`);\n  const {\n    dates\n  } = useContext(SearchContext);\n\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item => item !== value));\n  };\n\n  const handleClick = async () => {\n    try {\n      await Promise.all(selectedRooms.map(roomId => {\n        const res = axios.put(`/rooms/availability/${roomId}`, {\n          dates: alldates\n        });\n        return res.data;\n      }));\n      setOpen(false);\n      navigate(\"/\");\n    } catch (err) {}\n  };\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    const dates = [];\n\n    while (date <= end) {\n      dates.push(new Date(date).getTime());\n      date.setDate(date.getDate() + 1);\n    }\n\n    return dates;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleXmark,\n        className: \"rClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select your rooms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rItemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rTitle\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rDesc\",\n            children: item.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rMax\",\n            children: [\"Max people: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item.maxPeople\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rPrice\",\n            children: [\"$\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rSelectRooms\",\n          children: item.roomNumbers.map(roomNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: roomNumber.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: roomNumber._id,\n              onChange: handleSelect //disabled={!isAvailable(roomNumber)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"rButton\",\n        children: \"Reserve Now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reserve, \"sgGmFRi2+y9gipjvFpOK0FbzQf8=\", false, function () {\n  return [useFetch];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["D:/Facultate/BookingApp/client/src/components/reserve/Reserve.jsx"],"names":["FontAwesomeIcon","faCircleXmark","useFetch","useContext","useState","SearchContext","axios","useNavigate","Reserve","setOpen","hotelId","selectedRooms","setSelectedRooms","data","loading","error","dates","handleSelect","e","checked","target","value","filter","item","handleClick","Promise","all","map","roomId","res","put","alldates","navigate","err","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","push","setDate","getDate","title","desc","maxPeople","price","roomNumbers","roomNumber","number","_id"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./reserve.css\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { useContext, useState } from \"react\";\r\nimport { SearchContext } from \"../../context/SearchContext\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Reserve=({setOpen, hotelId}) =>{\r\n\r\n    const [selectedRooms, setSelectedRooms] = useState([]);\r\n    const { data, loading, error } = useFetch(`/hotels/room/${hotelId}`);\r\n    const { dates } = useContext(SearchContext);\r\n\r\n    const handleSelect = (e) => {\r\n        const checked = e.target.checked;\r\n        const value = e.target.value;\r\n        setSelectedRooms(\r\n            checked ? [...selectedRooms, value]\r\n                            : selectedRooms.filter((item) => item !== value)\r\n        );\r\n    };\r\n\r\n    const handleClick = async () => {\r\n        try {\r\n            await Promise.all(\r\n                selectedRooms.map((roomId) => {\r\n                    const res = axios.put(`/rooms/availability/${roomId}`, {\r\n                        dates: alldates,\r\n                    });\r\n                    return res.data;\r\n                })\r\n            );\r\n            setOpen(false);\r\n            navigate(\"/\");\r\n        } catch (err) {}\r\n    };\r\n\r\n    const getDatesInRange = (startDate, endDate) => {\r\n        const start = new Date(startDate);\r\n        const end = new Date(endDate);\r\n        const date = new Date(start.getTime());\r\n        const dates = [];\r\n\r\n        while (date <= end) {\r\n            dates.push(new Date(date).getTime());\r\n            date.setDate(date.getDate() + 1);\r\n        }\r\n        return dates;\r\n    };\r\n\r\n    return(\r\n\r\n\r\n        <div className=\"reserve\">\r\n            <div className=\"rContainer\">\r\n                <FontAwesomeIcon\r\n                    icon={faCircleXmark}\r\n                    className=\"rClose\"\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n                <span>Select your rooms:</span>\r\n                {data.map((item) => (\r\n                    <div className=\"rItem\" key={item._id}>\r\n                        <div className=\"rItemInfo\">\r\n                            <div className=\"rTitle\">{item.title}</div>\r\n                            <div className=\"rDesc\">{item.desc}</div>\r\n                            <div className=\"rMax\">\r\n                                Max people: <b>{item.maxPeople}</b>\r\n                            </div>\r\n                            <div className=\"rPrice\">${item.price}</div>\r\n                        </div>\r\n                        <div className=\"rSelectRooms\">\r\n                            {item.roomNumbers.map((roomNumber) => (\r\n                                <div className=\"room\">\r\n                                    <label>{roomNumber.number}</label>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        value={roomNumber._id}\r\n                                        onChange={handleSelect}\r\n                                        //disabled={!isAvailable(roomNumber)}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <button onClick={handleClick} className=\"rButton\">\r\n                    Reserve Now!\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reserve"]},"metadata":{},"sourceType":"module"}